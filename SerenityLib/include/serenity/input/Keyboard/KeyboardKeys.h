#pragma once
#ifndef ENGINE_EVENTS_KEYBOARD_KEYS_H
#define ENGINE_EVENTS_KEYBOARD_KEYS_H

#include <string>
#include <cstdint>

class KeyboardKey final {
    public:
        enum Key : uint32_t {
            Unknown = 0,
            A = 1,
            B,
            C,
            D,
            E,
            F,
            G,
            H,
            I,
            J,
            K,
            L,
            M,
            N,
            O,
            P,
            Q,
            R,
            S,
            T,
            U,
            V,
            W,
            X,
            Y,
            Z,
            Num0,
            Num1,
            Num2,
            Num3,
            Num4,
            Num5,
            Num6,
            Num7,
            Num8,
            Num9,
            Escape,
            LeftControl,
            LeftShift,
            LeftAlt,
            LeftSystem,
            RightControl,
            RightShift,
            RightAlt,
            RightSystem,
            Menu,
            LeftBracket,
            RightBracket,
            SemiColon,
            Comma,
            Period,
            Quote,
            Slash,
            BackSlash,
            Tilde,
            Equal,
            Dash,
            Space,
            Return,
            BackSpace,
            Tab,
            PageUp,
            PageDown,
            End,
            Home,
            Insert,
            Delete,
            Add,
            Subtract,
            Multiply,
            Divide,
            LeftArrow,
            RightArrow,
            UpArrow,
            DownArrow,
            Numpad0,
            Numpad1,
            Numpad2,
            Numpad3,
            Numpad4,
            Numpad5,
            Numpad6,
            Numpad7,
            Numpad8,
            Numpad9,
            F1,
            F2,
            F3,
            F4,
            F5,
            F6,
            F7,
            F8,
            F9,
            F10,
            F11,
            F12,
            F13,
            F14,
            F15,
            Pause,

            _TOTAL,
        };
        [[nodiscard]] static const char* toCharArray(KeyboardKey::Key);
        [[nodiscard]] static std::string toString(KeyboardKey::Key);
        [[nodiscard]] static bool isModifierKey(KeyboardKey::Key);
        [[nodiscard]] static const char* toCharArray(uint32_t keyboard_key);
        [[nodiscard]] static std::string toString(uint32_t keyboard_key);
        [[nodiscard]] static bool isModifierKey(uint32_t keyboard_key);
};

#endif